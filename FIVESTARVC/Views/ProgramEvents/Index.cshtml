@model PagedList.IPagedList<FIVESTARVC.Models.ProgramEvent>
@using PagedList.Mvc;
@using FIVESTARVC.Models;

@{
    ViewBag.Title = "Event Log";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2>Event Log</h2>
<br />
<div class="btn-group" style="margin-bottom: 0.5em;">
    <input type="button" class="btn btn-success" value="New Event Entry" onclick="location.href='/ProgramEvents/Create';" />
</div>
<br />
@using (Html.BeginForm("Index", "ProgramEvents", FormMethod.Get))
{
    <div class="form-inline">

        Find by name:&nbsp;

        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control" })
        &nbsp;<input class="btn btn-sm btn-outline-secondary" type="submit" value="Refine" />
    </div>
}
<br />
<table class="table table-sm table-striped">
    <tr>
        <th>
            @Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.ProgramSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Start Date
        </th>
        <th>
            End Date
        </th>
        <th>
            Completed?
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.ProgramType.ProgramDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Resident.ClearLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClearStartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClearEndDate)
            </td>
            <td>
                @(item.Completed ? "Yes" : "No")
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProgramEventID }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary btn-light" }) &nbsp;
                @Html.ActionLink("Details", "Details", new { id = item.ProgramEventID }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary btn-light" }) &nbsp;
                @Html.ActionLink("Delete", "Delete", new { id = item.ProgramEventID }, htmlAttributes: new { @class = "btn btn-sm btn-danger" })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
