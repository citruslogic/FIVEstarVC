@model PagedList.IPagedList<FIVESTARVC.Models.Resident>
@using PagedList.Mvc;
@using FIVESTARVC.Models;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Required for the Bootstrap dropdown.*@
<script type="text/javascript" src="~/Scripts/umd/popper.js"></script>

<style>
    .modal-content {
        /*width: 400px !important;*/
        margin: 30px auto !important;
    }
</style>
@{
    /**/

    ViewBag.Title = "Residents";
}

@if (TempData["UserMessage"] != null)
{
    var message = TempData["UserMessage"];
    <div class="alert alert-dark alert-dismissable" style="position: absolute; right: 80px; top: 30px;">
        <a href="#" class="close" data-dismiss="alert" aria-label="close"> &times;</a>
        @message &nbsp;
    </div>
}

<h2>Residents Listing</h2>
<br />
<div class="btn-group" style="margin-bottom: 1em;">

    <button type="button" style="margin-right: 10px;" class="btn btn-success" onclick="location.href = '/Residents/Create';"><i class="fa fa-pencil-square fa-fw"></i> Admit Resident</button>
    <div class="dropdown">
        <button style="margin-right: 10px;" class="btn btn-warning dropdown-toggle" type="button" data-toggle="dropdown">
            <i class="fa fa-gears fa-fw"></i> Utilities
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li><button class="dropdown-item" onclick="addCampaign()"><i class="fa fa-plus fa-fw"></i> Campaign</button></li>
            <li>
                <button class="dropdown-item" onclick="showQuickEventDialog()">
                    <i class="fa fa-plus fa-fw"></i> Track
                </button>
            </li>
        </ul>
    </div>
</div>

<br />
@using (Html.BeginForm("Index", "Residents", FormMethod.Get))
{
    <div class="form-inline" style="margin-bottom: 1em;">

        Find by name:&nbsp;

        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control" })
        &nbsp;<input class="btn btn-sm btn-outline-secondary" type="submit" value="Search" />
    </div>

}
<br />
<table class="table table-sm table-striped">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            First Name
        </th>
        <th>
            @Html.ActionLink("Service Branch", "Index", new { sortOrder = ViewBag.BranchSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Current?
        </th>
        <th>
        </th>
        <th>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        if (item != null)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ClearLastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClearFirstMidName)
                </td>
                <td>
                    @{
                        var serviceDescription = FSEnumHelper.GetDescription(item.ServiceBranch);


                        @Html.DisplayFor(modelItem => serviceDescription)
                    }

                </td>
                <td>
                    @{
                        if (item.IsCurrent())
                        {
                            @Html.Raw("Yes")
                        }
                        else
                        {
                            @Html.Raw("No")
                        }
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ResidentID }, htmlAttributes: new { @class = "btn btn-secondary btn-sm" }) &nbsp;

                    @if (item.IsCurrent())
                    {
                        @Html.ActionLink("Manage Tracks", "Manage", "ProgramEvents", new { id = item.ResidentID },
                                        htmlAttributes: new { @class = "btn btn-secondary btn-sm" })

                    }
                  
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.ResidentID }, htmlAttributes: new { @class = "btn btn-secondary btn-sm" }) &nbsp;

                    @if (item.IsCurrent())
                    {

                        @:<input type="button" value="Release" class="modal-link btn btn-sm btn-danger"
                                  @: data-toggle="modal" data-target="#QuickEventModal" onclick="showDischargeDialog(@item.ResidentID)" />


                    }
                    else
                    {

                        @:<input type="button" value="Re-admit" class="modal-link btn btn-sm btn-primary"
                                  @: data-toggle="modal" data-target="#QuickEventModal" onclick="showReadmitDialog(@item.ResidentID)" />
                    }
                </td>
            </tr>
        }
    }

</table>

<div id="QuickEventModal" class="modal fade">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <h5 class="modal-title"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>

            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('#AddModal').on('shown.bs.modal', function () {
            jQuery.validator.unobtrusive.parse($(this));
        })

        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4000);

        function showQuickEventDialog() {

            $.get('/ProgramEvents/ViewQuickEvent/', function (data) {
                $('.modal-body').html = '';
                $('.modal-body').html(data);
                $('.modal-title').html("Quick Event")
                $('#AddModal').modal('show');
            });

        }

        function addCampaign() {

            $.get('/Residents/AddCampaign/', function (data) {
                $('.modal-body').html = '';
                $('.modal-body').html(data);
                $('.modal-title').html("Add Campaign");
                $('#AddModal').modal('show');

            });
        }

        function showDischargeDialog(resident) {

            $.get('/Residents/Discharge/' + resident, function (data) {
                $('.modal-body').html = '';
                $('.modal-body').html(data);
                $('.modal-title').html("Release from Center");
                $('#QuickEventModal').modal('show');
            });
        }

        function showReadmitDialog(resident) {

            $.get('/Residents/Readmit/' + resident, function (data) {
                $('.modal-body').html = '';
                $('.modal-body').html(data);
                $('.modal-title').html("Readmit to Center");
                $('#QuickEventModal').modal('show');
            });
        }

    </script>

}
