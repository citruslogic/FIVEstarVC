@model FIVESTARVC.ViewModels.ResidentIncomeModel


@{
    ViewBag.Title = "New Resident";
}

<style>
    .biggerCheckBox {
        transform: scale(1.5);
        -webkit-transform: scale(1.5);
        margin-left: 5px;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h2> Admit Resident </h2>
    @Html.ValidationSummary(true, "ERROR", htmlAttributes: new { @class = "field-validation-error" })

    <div class="container">
        <div class="row col-md-10">
            <table class="table table-striped table-sm">
                <tbody>
                    <tr>
                        @Html.ValidationMessageFor(model => model.LastName)
                        @Html.ValidationMessageFor(model => model.AdmitDate, "")
                        <td class="col-form-label">@Html.LabelFor(model => model.AdmitDate, htmlAttributes: new { @class = "control-label" })</td>
                        <td>
                            @Html.EditorFor(model => model.AdmitDate, new { htmlAttributes = new { @class = "form-control" } })
                        </td>

                        <td class="col-form-label">@Html.LabelFor(model => model.DischargeStatus)</td>
                        <td>@Html.EnumDropDownListFor(model => model.DischargeStatus, htmlAttributes: new { @class = "form-control", @style = "width: 250px;" })</td>

                        <td class="col-form-label"> @Html.LabelFor(model => model.ServiceBranch, htmlAttributes: new { @class = "control-label" })</td>
                        <td>
                            @Html.EnumDropDownListFor(model => model.ServiceBranch, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ServiceBranch, "")
                        </td>
                    </tr>
                <tr>
                    <td class="col-form-label">@Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstMidName, "")
                    </td>
                    <td class="col-form-label">

                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    </td>

                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Gender)
                    </td>
                    <td>
                        @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                    </td>

                </tr>

                <tr>
                    @Html.ValidationMessageFor(model => model.Birthdate, "")

                    <td>
                        @Html.LabelFor(model => model.Ethnicity, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Ethnicity)
                    </td>
                    <td>
                        @Html.EnumDropDownListFor(model => model.Ethnicity, htmlAttributes: new { @class = "form-control" })
                    </td>
                    <td class="col-form-label">@Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" })</td>
                    <td>
                        <div class="input-group mb-2">
                            <div class="input-group-prepend">
                                <span class="input-group-text fa fa-calendar fa-fw" style="width:40px;"></span>
                            </div>
                            @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </td>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Religion)
                    </td>

                    <td>
                        @Html.EnumDropDownListFor(model => model.Religion, htmlAttributes: new { @class = "form-control", @style = "width: 200px;" })
                    </td>
                </tr>

                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.StateTerritoryID, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DropDownList("StateTerritoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StateTerritory)
                    </td>

                    <td class="col-form-label">
                        @Html.LabelFor(model => model.ReferralID, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DropDownList("ReferralID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Referral)
                    </td>

                    <td colspan="2">
                        @Html.EditorFor(model => model.ReferralOther, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReferralOther)
                    </td>
                </tr>
                <tr>
                    <td class="col-form-label">
                        @Html.Label("Region", htmlAttributes: new { @class = "text-right" })
                    </td>
                    <td>


                        <div class="align-text-top" id="Region">

                        </div>
                    </td>

                </tr>

            </tbody>
        </table>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-5">
            <table class="table-sm">
                <tbody>
                    <tr>
                        <td class="col-form-label">@Html.Label("In Veteran's Court?", htmlAttributes: new { @class = "control-label" })</td>
                        <td>
                            @Html.CheckBoxFor(model => model.InVetCourt, htmlAttributes: new { @class = "biggerCheckBox" })
                            @Html.ValidationMessageFor(model => model.InVetCourt, "")
                        </td>
                    </tr>
                    <tr>
                        <td class="col-form-label border-top">
                            @Html.LabelFor(model => model.IsNoncombat, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td class="border-top">
                            @Html.CheckBoxFor(model => model.IsNoncombat, htmlAttributes: new { @class = "biggerCheckBox" })
                            @Html.ValidationMessageFor(model => model.IsNoncombat, "")


                        </td>
                    </tr>
                    <tr>
                        <td class="col-form-label border-bottom">
                            @Html.Label("Campaigns", htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td class="border-bottom">
                            <div style="height: 100px; overflow-y: scroll; margin-top: 10px;">

                                @{
                                    List<FIVESTARVC.ViewModels.AssignedCampaignData> campaigns = ViewBag.Campaigns;

                                    foreach (var campaign in campaigns)
                                    {

                                        @:
                                        <input type="checkbox"
                                               class="biggerCheckBox campaign"
                                               name="selectedCampaigns"
                                               value="@campaign.MilitaryCampaignID"
                                               @(Html.Raw(campaign.Assigned ? "checked=\"checked\"" : "")) />
                                        @campaign.MilitaryCampaign @:<br />
                                    }

                                }
                            </div>
                        </td>


                    <tr>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
                    <tr>
                        <td class="col-form-label">@Html.Label("Admission type", htmlAttributes: new { @class = "control-label" })</td>
                        <td>
                            @Html.DropDownList("AdmissionType", null, htmlAttributes: new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="col-form-label">@Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label" }) </td>
                        <td>
                            @Html.TextAreaFor(model => model.Note, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Note, "")
                        </td>

                    </tr>
                </tbody>
            </table>


        </div>
        @Html.Partial("BenefitPartialViewCreate")

    </div>
</div>

<br />
<p style="position: relative; bottom: 5em;">
    After you admit this resident, you will be taken to the track enrollment form where you can enroll a resident into tracks.
    <input type="submit" value="Admit" class="btn btn-primary" data-confirm="Are you sure you want to submit this application and start enrolling this resident into tracks?" />

    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-secondary" })

</p>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")

    <script type="text/javascript">

    if (!Modernizr.inputtypes.date) {
        $('input[type=date]')
            .attr('type', 'text')
            .datepicker({
                // Consistent format with the HTML5 picker
                dateFormat: 'mm-dd-yy'
            });
    }

    $(document).ready(function () {


        if (document.getElementById("TotalBenefitAmount").val) {
            document.getElementById("DisplayTotal").value = parseFloat(document.getElementById("TotalBenefitAmount").value);

        }

        $('#ReferralOther').hide();

        $("#IsNoncombat").click(function () {
            if ($(this).is(":checked")) {
                $(".campaign").prop('checked', false);
                $(".campaign").attr("disabled", true);

            } else {
                $(".campaign").attr("disabled", false);
            }
        });

        $.ajax({
            "url": "/Residents/GetRegionName/" + $("#StateTerritoryID").val(),
            "type": "get",
            "dataType": "json",
            "success": function (data) {
                $('#Region').text(data);
            }
        });



    });

        $('.income').on("keyup", function () {
            var total = parseFloat(0.0);

            $('.income').each(function () {
                total += parseFloat($(this).val() || 0);
            });

            if (total.valueOf != NaN) {
                $('#TotalBenefitAmount').val(total);
                $('#DisplayTotal').val(total);
            }

    });

        $('#StateTerritoryID').on("change", function () {

            $.ajax({
                "url": "/Residents/GetRegionName/" + $("#StateTerritoryID").val(),
                "type": "get",
                "dataType": "json",
                "success": function (data) {
                    $('#Region').text(data);
                }
            });

        });

        $('#ReferralID').on("change", function () {

            if ($('#ReferralID option:selected').text() === "Other") {
                $('#ReferralOther').show();
            } else {
                $('#ReferralOther').val('');
                $('#ReferralOther').hide();
            }
        });

        $("#DisabilityPercentage").focusout(function () {

            if ($(this).val().length > 0) {

                if ($(this).val().indexOf("%") == -1) {
                    var percentage = $(this).val();
                    $(this).val(percentage + '%');
                }

            }

        });

        /* For the case we are striking enter instead of clicking the Admit button */
        $(document).keypress(function (e) {
            if (e.which == 13) {
                if (!confirm("Are you sure you want to submit this application?")) {
                    e.preventDefault();
                }
            }
        });

        jQuery(document).ready(function () {
            jQuery('[data-confirm]').click(function (e) {
                if (!confirm(jQuery(this).attr("data-confirm"))) {
                    e.preventDefault();
                }
            });

            if ($("#IsNoncombat").is(":checked")) {
                $(".campaign").prop('checked', false);
                $(".campaign").attr("disabled", true);

            } else {
                $(".campaign").attr("disabled", false);
            }
        });

    </script>
}
