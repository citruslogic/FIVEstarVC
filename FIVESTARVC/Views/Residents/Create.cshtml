@model FIVESTARVC.ViewModels.ResidentIncomeModel


    @{
        ViewBag.Title = "New Resident";
    }


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="row">

        <div class="col-sm-5 table-responsive">
            <h2> New Resident </h2>
            
                <table class="table table-sm">


                    <tbody>
                        <tr>

                            <td class="col-form-label">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </td>

                        </tr>
                        <tr>
                            <td class="col-form-label">@Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label" })</td>
                            <td>
                                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td class="col-form-label">@Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" })</td>
                            <td>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text fa fa-calendar fa-fw" style="width:40px;"></span>
                                    </div>
                                    @Html.EditorFor(model => model.Birthdate)
                                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td class="col-form-label"> @Html.LabelFor(model => model.ServiceBranch, htmlAttributes: new { @class = "control-label" })</td>
                            <td>
                                @Html.EnumDropDownListFor(model => model.ServiceBranch, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ServiceBranch, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <
                            <td class="col-form-label"> @Html.LabelFor(model => model.Rooms, htmlAttributes: new { @class = "control-label col-md-offset-3" })</td>
                            <td>
                                @Html.DropDownListFor(p => p.RoomID, Model.RoomIEnum, "Select Room")
                            </td>
                        </tr>
                        <tr>
                            <td class="col-form-label">@Html.Label("Resident has PTSD?")</td>
                            <td>
                                @Html.EditorFor(model => model.HasPTSD)
                                @Html.ValidationMessageFor(model => model.HasPTSD, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td class="col-form-label">@Html.Label("in Veteran's Court?", htmlAttributes: new { @class = "control-label col-sm-offset-10" })</td>
                            <td>
                                @Html.EditorFor(model => model.InVetCourt)
                                @Html.ValidationMessageFor(model => model.InVetCourt, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                        <tr>
                            <td class="col-form-label">
                                @Html.Label("Campaigns", htmlAttributes: new { @class = "control-label col-md-offset-3" })
                            </td>
                            <td>
                                <div class="form-check">
                                    @{
                                int cnt = 0;
                                List<FIVESTARVC.ViewModels.AssignedCampaignData> campaigns = ViewBag.Campaigns;

                                foreach (var campaign in campaigns)
                                {
                                    if (cnt++ % 1 == 0)
                                    {
                                        @:<br />
                            }
                            @:

                            <input type="checkbox"
                                   name="selectedCampaigns"
                                   value="@campaign.MilitaryCampaignID"
                                   @(Html.Raw(campaign.Assigned ? "checked=\"checked\"" : "")) />
                            @campaign.MilitaryCampaign @: &nbsp;
                            }

                                    }
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="col-form-label">@Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-offset-3" }) </td>
                            <td>
                                @Html.TextAreaFor(model => model.Note, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                    </tbody>
                </table>

            
        </div>
        @Html.Partial("BenefitPartialViewCreate")

        </div>


    <br />
    <div class="form-group form-inline">
        <div class="col-md-offset-1 col-md-2">
            <input type="submit" value="Admit" class="btn btn-dark" />
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval");
    @Scripts.Render("~/bundles/jqueryui");

<script type="text/javascript">

    if (!Modernizr.inputtypes.date) {
        $('input[type=date]')
            .attr('type', 'text')
            .datepicker({
                // Consistent format with the HTML5 picker
                dateFormat: 'mm-dd-yy'
            });
    }

        $('.income').on("keyup", function () {
            var total = parseFloat(0.0);

            $('.income').each(function () {
                total += parseFloat($(this).val() || 0);
            });

            $('#TotalBenefitAmount').val(total);
        });
        $('.DropDownClear').on("onload", function () {
            document.getElementById('RoomID').length = 0;

            roomsort();

        });

            //Clear the rooms dropdown
        
        function roomsort()
         {
             //Call the GET method again and run the query
             //By calling it now, you ensure the Rooms
             //Dropdown is updated everytime the page is loaded.

             $.ajax({

                 type: "GET",
                 url: '@Url.Action("Create", "Resident")'

             });

</script>
}
