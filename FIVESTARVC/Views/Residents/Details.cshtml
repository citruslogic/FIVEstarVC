@model FIVESTARVC.Models.Resident
@using FIVESTARVC.Models

@{
    ViewBag.Title = "Details";
}

<style>
    .events table {
        width: 100%;
    }

    .events thead, .events tbody, .events tr, .events td, .events th {
        display: block;
    }

        .events tr:after {
            content: ' ';
            display: block;
            visibility: hidden;
            clear: both;
        }

        .events thead th {
            height: 50px;
            /*text-align: left;*/
        }

    .events tbody {
        height: 120px;
        overflow-y: auto;
    }

    .events thead {
        /* fallback */
    }

   
    .money-wide {
        width: 150px;
        
    }
        .events tbody td, .events thead th {
            width: 15.2%;
            float: left;
        }
</style>
<h2>Details for @(Model.ClearLastName)</h2>


<div class="row">

    <div class="col-sm-4">
        <div class="col-form-label">
            @Html.Label("Full Name", htmlAttributes: new { @class = " font-weight-bold" })
            @Html.DisplayFor(model => model.Fullname)
        </div>

        <div class=" col-form-label">
            @Html.Label("Home of Record", htmlAttributes: new { @class = "font-weight-bold" })
            @Html.DisplayFor(model => model.StateTerritory.State)
            @{<text>(</text>}@Html.DisplayFor(model => model.StateTerritory.Region)@{<text>)</text>}
        </div>
        <div class="col-form-label">
            @Html.LabelFor(model => model.RoomNumber, htmlAttributes: new { @class = "font-weight-bold" })
            @if (Model.RoomNumber.HasValue)
            {
                @Html.DisplayFor(model => model.RoomNumber)
            }
            else
            {
                <text>NA</text>
            }

        </div>

        <div class="col-form-label">
            @Html.LabelFor(model => model.ClearBirthdate, htmlAttributes: new { @class = "font-weight-bold" })
            @{
                if (Model.ClearBirthdate == null)
                {
                    <text>No birthdate provided.</text>
                }
                else
                {
                    @(Model.ClearBirthdate.ToLongDateString())

                }
            }
        </div>



        <div class="col-form-label">
            @Html.Label("Age", htmlAttributes: new { @class = "font-weight-bold" })

            @if ((Model.Age) != 0)
            {
                @(Model.Age)
            }
            else
            {
                <text>Not available.</text>
            }
        </div>
        <div class="col-form-label">
            @Html.Label("First Admitted", htmlAttributes: new { @class = "font-weight-bold" })
            @(ViewBag.DateFirstAdmitted)

        </div>
        <div class="col-form-label">
            <div class="font-weight-bold">
                @Html.Label("Service Discharge Status")
            </div>

            @{
                var dischargeDescription = FSEnumHelper.GetDescription(Model.MilitaryDischarge);


                @Html.DisplayFor(modelItem => dischargeDescription)
            }
        </div>
        <div class="col-form-label">
            @Html.Label("Campaigns", htmlAttributes: new { @class = "col-md-0 font-weight-bold" })
            <br />
            <div style="height: 74px; width: 200px; overflow-y: scroll;">
                @{
                    bool campaignsExist = false;
                    List<FIVESTARVC.ViewModels.AssignedCampaignData> campaigns = ViewBag.Campaigns;



                    foreach (var campaign in campaigns)
                    {


                        if (campaign.Assigned)
                        {
                            campaignsExist = true;
                            @campaign.MilitaryCampaign
                            <br />
                        }

                    }

                    if (Model.IsNoncombat)
                    {
                        <text>Non-combat.</text>
                    }

                    else if (!campaignsExist)
                    {
                        <text>No campaigns. </text>
                    }



                }
            </div>
        </div>
        <div class="form-row">
            @Html.LabelFor(model => model.InVetCourt, htmlAttributes: new { @class = "control-label col-md-0 font-weight-bold" })
            @(Model.InVetCourt ? "Yes" : "No")
        </div>

    </div>
    <div class="col-sm-5 offset-3" style="box-shadow: 0 0 30px black;">
        <h5>Income </h5>
        <table class="table table-bordered table-striped">

            <thead>
                <tr>
                    <th style="width: 300px;">Type</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.DisabilityPercentage, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Benefit.DisabilityPercentage)

                    </td>
                    </tr>
                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.DisabilityAmount, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Benefit.DisabilityAmount)

                    </td>
                </tr>
                    
                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.FoodStamp, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @if (Model.Benefit != null)
                        {
                            @(Model.Benefit.FoodStamp ? "Yes" : "No")

                        } else
                        {
                            <text>No</text>
                        }

                    </td>
                </tr>
                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.SSI, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Benefit.SSI)
                    </td>
                </tr>
                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.SSDI, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Benefit.SSDI)
                    </td>
                </tr>

                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.OtherDescription, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Benefit.OtherDescription)
                    </td>
                </tr>
                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.Other, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.DisplayFor(model => model.Benefit.Other)
                    </td>
                </tr>
                <tr>
                    <td class="col-form-label">
                        @Html.LabelFor(model => model.Benefit.TotalBenefitAmount, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>

                        @Html.DisplayFor(model => model.Benefit.TotalBenefitAmount)

                    </td>
                </tr>
        </table>
    </div>

</div>


<div class="row">
    <div class="col-md-3">
        <table class="table table-sm">
            <tr>
                <td>
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label font-weight-bold" })

                </td>
                <td>
                    @Html.DisplayFor(model => model.Note)
                </td>
            </tr>
        </table>
    </div>
    <div class="col-md-9">
        <h4>Tracks</h4>

        <table class="events table table-sm" style="width: 100%">
            <thead>
                <tr>
                    <th style="width: 21.2em;">Track Name</th>
                    <th> Start Date</th>
                    <th> End Date</th>
                    <th> Completed?</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ProgramEvents)
                {
                    <tr>
                        <td style="width: 21.2em">
                            @Html.DisplayFor(modelItem => item.ProgramType.ProgramDescription)
                        </td>
                        <td>
                            @(item.GetShortStartDate())
                        </td>
                        <td>
                            @(item.GetShortEndDate())
                        </td>
                        <td>
                            @if (item.Completed == true)
                            {
                                <text>Yes</text>
                            }
                            else
                            {
                                <text>No</text>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>



</div>



<p>
    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
</p>
